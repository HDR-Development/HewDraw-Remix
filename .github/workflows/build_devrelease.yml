name: build_devrelease
on:
  workflow_dispatch:

jobs:
  version_check:
    runs-on: ubuntu-20.04
    env:
      GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
    steps:
      - id: latest_package
        continue-on-error: true
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          repository: HDR-Development/HDR-DevReleases
          token: ${{ secrets.RELEASE_TOKEN }}
    
      # fail out if there's already a release for this commit
      - name: ensure one build per sha
        if: ${{ contains(steps.latest_package.outputs.description, github.sha) }}
        run: exit 1

  plugin_build:
    env:
      PLUGIN_NAME: hdr
    runs-on: ubuntu-20.04
    needs: version_check
    container: 
      image: wuboyth/skyline-plugin-builder:latest
    steps:
    # - name: Free Disk Space (Ubuntu)
    #   uses: jlumbroso/free-disk-space@v1.3.1

    # - name: setup python
    #   uses: actions/setup-python@v5.1.0
    #   with:
    #     python-version: '3.9' # Version range or exact version of a Python version to use, using SemVer's version range syntax
    
    - name: checkout version
      uses: actions/checkout@v4.1.4

    # get the most recent latest full release
    - id: package_latest
      uses: pozetroninc/github-action-get-latest-release@master
      with:
        repository: HDR-Development/HDR-DevReleases
        token: ${{ secrets.RELEASE_TOKEN }}
        excludes: prerelease, draft

    - uses: actions-ecosystem/action-bump-semver@v1
      id: bump-semver
      with:
        current_version: ${{ steps.package_latest.outputs.release }}
        level: patch

    # build the project
    - run: |
        cd scripts && NO_RUST_NIGHTLY=1 python3 make_dist.py build version=${{ steps.bump-semver.outputs.new_version }} name=hdr-private && cd ..
        du -sh *
        rm -rf target
        du -sh *
      env:
        HOME: /root

    - id: romfs_version
      uses: pozetroninc/github-action-get-latest-release@master
      with:
        token: ${{ secrets.RELEASE_TOKEN }}
        repository: HDR-Development/romfs-release

    - name: Download romfs
      id: get_romfs
      uses: dsaltares/fetch-gh-release-asset@master
      with:
        repo: 'HDR-Development/romfs-release'
        version: 'tags/${{ steps.romfs_version.outputs.release }}'
        file: 'romfs.zip'
        token: ${{ secrets.RELEASE_TOKEN }}

    - name: make package
      run: |
        python3 scripts/full_package.py devrelease none

    - name: Download latest switch package
      id: get_old_switch_package
      if: steps.package_latest.outcome != 'failure'
      uses: dsaltares/fetch-gh-release-asset@master
      with:
        repo: 'HDR-Development/HDR-DevReleases'
        version: 'tags/${{ steps.package_latest.outputs.release }}'
        file: 'switch-package.zip'
        token: ${{ secrets.RELEASE_TOKEN }}

    # build the upgrade.zip and deletions.json
    - name: make upgrade artifacts
      if: steps.package_latest.outcome != 'failure'
      run: |
        python3 scripts/make_diff.py devrelease

    - name: show upgrade artifacts
      if: steps.package_latest.outcome != 'failure'
      run: |
        ls && stat * && echo && ls upgrade_artifacts && stat upgrade_artifacts/*

    # upload the upgrade data to the previous release for auto updater
    - name: Upload upgrade data to previous release
      if: steps.package_latest.outcome != 'failure'
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.RELEASE_TOKEN }}
        file: upgrade_artifacts/upgrade.zip
        prerelease: true
        make_latest: false
        file_glob: true
        asset_name: upgrade
        repo_name: HDR-Development/HDR-DevReleases
        tag: ${{ steps.package_latest.outputs.release }}
        overwrite: true

    # upload the upgrade deletions to the previous release for auto updater
    - name: Upload upgrade deletions to previous release
      if: steps.package_latest.outcome != 'failure'
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.RELEASE_TOKEN }}
        file: upgrade_artifacts/deletions.json
        prerelease: true
        make_latest: false
        file_glob: true
        asset_name: deletions
        repo_name: HDR-Development/HDR-DevReleases
        tag: ${{ steps.package_latest.outputs.release }}
        overwrite: true

    - name: Display structure of downloaded version
      run: ls -R && cp hdr_version.txt artifacts

    - name: Upload full package to devreleases
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.RELEASE_TOKEN }}
        file: artifacts/*
        prerelease: false
        make_latest: true
        file_glob: true
        asset_name: artifacts
        repo_name: HDR-Development/HDR-DevReleases
        release_name: ${{ steps.bump-semver.outputs.new_version }}
        tag: ${{ steps.bump-semver.outputs.new_version }}
        body: Built from commit ${{ github.sha }}
        overwrite: true
